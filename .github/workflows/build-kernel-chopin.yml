name: Build Kernel Module

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Module Source
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libelf-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev

    - name: Clone Kernel Source
      run: git clone --depth=1 https://github.com/SMlc666/android_kernel_chopin_android_T -b T kernel_source

    - name: Clone Toolchain
      run: git clone --depth=1 https://gitlab.com/LeCmnGend/proton-clang.git -b clang-13 clang

    - name: Set up Environment
      run: |
        echo "$(pwd)/clang/bin" >> $GITHUB_PATH

    - name: Prepare Kernel Source for Module Build
      working-directory: ./kernel_source
      run: |
        # Copy module source into kernel tree
        cp -r ../kernel ./drivers/hack

        # Add module to Kconfig and Makefile
        echo 'source "drivers/hack/Kconfig"' >> drivers/Kconfig
        echo 'obj-$(CONFIG_KERNEL_HACK) += hack/' >> drivers/Makefile

        # Configure the kernel
        export ARCH=arm64
        export SUBARCH=arm64
        make O=out mrproper
        make O=out chopin_user_defconfig

        # Enable the module config
        scripts/config --file out/.config --set-str CONFIG_KERNEL_HACK m

    - name: Build Kernel Module
      working-directory: ./kernel_source
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export KBUILD_BUILD_USER="GitHub"
        export KBUILD_BUILD_HOST="Actions"
        
        make -j$(nproc --all) O=out modules_prepare
        
        make -j$(nproc --all) O=out M=drivers/hack \
          CC=clang \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          LD=ld.lld \
          STRIP=llvm-strip \
          AS=llvm-as \
          AR=llvm-ar \
          NM=llvm-nm \
          OBJCOPY=llvm-objcopy \
          OBJDUMP=llvm-objdump \
          CONFIG_NO_ERROR_ON_MISMATCH=y

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: KernelModule
        path: kernel_source/drivers/hack/my_driver.ko